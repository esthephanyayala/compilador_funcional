
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'APPEND CAR CDR CHAR CLOSE_PAREN CTEC CTEF CTEI DECLARE DEFINE DIVIDE EMPTY_PREDICATE EQUAL EVEN_PREDICATE FALSE FILTER FLOAT FLOAT_PREDICATE FUNCTIONS GT ID IF INT INT_PREDICATE LAMBDA LENGTH LIST LIST_PREDICATE LT MAIN MAP MINUS NE NULL_PREDICATE OPEN_PAREN PLUS PRINT PROGRAM QUOTE TIMES TRUE VARS VOID programa : OPEN_PAREN PROGRAM ID programa_2 programa_3 main CLOSE_PAREN programa_2  : declaracionvariables\n                    | empty  programa_3  : declaracionfuncion\n                    | empty  imprimir : OPEN_PAREN PRINT imprimir_2 CLOSE_PAREN  imprimir_2  : CTEC np_stackCTEC\n                    | expresion\n                    | lambda\n                    | listfunctions\n     expresion   : exp \n                    | OPEN_PAREN signosrelacionales exp exp CLOSE_PAREN \n                    | expresionesunarias signosrelacionales  : LT \n                            | GT\n                            | NE\n                            | EQUAL  expresionesunarias  : OPEN_PAREN expresionesunarias_2 exp CLOSE_PAREN \n                            | TRUE\n                            | FALSE  expresionesunarias_2    : EVEN_PREDICATE \n                                | INT_PREDICATE\n                                | FLOAT_PREDICATE\n                                | LIST_PREDICATE\n                                | NULL_PREDICATE\n                                | EMPTY_PREDICATE  exp : OPEN_PAREN signos1 exp exp CLOSE_PAREN\n            | OPEN_PAREN signos2 exp exp CLOSE_PAREN\n            | varcte \n            | llamada\n            | returnelementsignos1 : PLUS \n                | MINUS signos2 : TIMES \n                | DIVIDE  varcte : ID np_stackCTEID\n                | CTEI np_stackCTEI\n                | CTEF np_stackCTEF np_stackCTEID : np_stackCTEI : np_stackCTEF : np_stackCTEC :  declaracionfuncion : OPEN_PAREN FUNCTIONS np_create_funcObject declaracionfuncion_2 CLOSE_PAREN  np_create_funcObject :  declaracionfuncion_2    : funcion declaracionfuncion_2 \n                                | empty funcion : OPEN_PAREN DEFINE OPEN_PAREN OPEN_PAREN tipo ID np_create_dirFunc CLOSE_PAREN typeparam np_varTabFunc CLOSE_PAREN bloque CLOSE_PAREN  np_create_dirFunc :  np_varTabFunc :  typeparam  : tipovars ID np_idparam typeparam\n                    | empty  np_idparam :  param   : ID param\n                | empty  declaracionvariables : OPEN_PAREN VARS np_create_dirFuncVars declaracionvariables_2 CLOSE_PAREN  np_create_dirFuncVars :  declaracionvariables_2 : declare declaracionvariables_2\n                                | empty  declare : OPEN_PAREN DECLARE ID declare_2 np_create_varTable CLOSE_PAREN  np_create_varTable :  declare_2   : definircte\n                    | definirlista definircte  : CTEI np_definicioni\n                    | CTEF np_definicionf\n                    | CTEC np_definicionc  np_definicioni :  np_definicionf :  np_definicionc :  definirlista : QUOTE OPEN_PAREN definirlista_2 CLOSE_PAREN  definirlista_2  : definircte definirlista_2\n                        | empty lista : ID\n              | QUOTE OPEN_PAREN lista_2 CLOSE_PAREN\n     lista_2 : CTEI lista_2\n                | CTEF lista_2\n                | CTEC lista_2\n                | empty\n     listfunctions : returnelement\n                      | returnlist\n     returnlist : OPEN_PAREN returnlist_2 lista CLOSE_PAREN \n                    | append\n                    | lista\n                    | createlist\n                    | map\n                    | llamada\n                    | filter\n     returnlist_2 : CDR  returnelement : OPEN_PAREN returnelement_2 returnlist CLOSE_PAREN\n                     | TRUE\n                     | FALSE \n     returnelement_2 : CAR\n                        | LENGTH\n                        | NULL_PREDICATE\n                        | LIST_PREDICATE\n                        | EMPTY_PREDICATE \n     createlist : OPEN_PAREN LIST createlist_2 CLOSE_PAREN  createlist_2 : expresion createlist_2 \n                     | empty\n     bloque : imprimir \n                | expresion\n                | condicion \n                | lambda\n                | listfunctions \n                | llamada \n     main        : OPEN_PAREN MAIN main_2 CLOSE_PAREN\n                    | empty  main_2      : bloque main_2 \n                    | empty  condicion : OPEN_PAREN IF expresion bloque rellenar_gotof bloque  CLOSE_PAREN  rellenar_gotof :  lambda : OPEN_PAREN OPEN_PAREN LAMBDA OPEN_PAREN param CLOSE_PAREN bloque CLOSE_PAREN lambda_2 CLOSE_PAREN  lambda_2    : expresion\n                    | empty  append : OPEN_PAREN APPEND returnlist returnlist append_2 CLOSE_PAREN  append_2 : returnlist append_2\n                | empty \n     map : OPEN_PAREN MAP map_3 returnlist map_2 CLOSE_PAREN  map_2 : returnlist map_2\n              | empty \n     map_3 : OPEN_PAREN LAMBDA OPEN_PAREN param CLOSE_PAREN bloque CLOSE_PAREN  filter : OPEN_PAREN FILTER filter_2 returnlist CLOSE_PAREN  filter_2 : OPEN_PAREN LAMBDA OPEN_PAREN param CLOSE_PAREN bloque CLOSE_PAREN\n                 | EVEN_PREDICATE\n                 | INT_PREDICATE\n                 | FLOAT_PREDICATE  tipo : INT\n            | FLOAT\n            | CHAR\n            | VOID\n            | LIST\n     tipovars : INT\n            | FLOAT\n            | CHAR\n            | LIST\n     llamada : OPEN_PAREN ID llamada_2 CLOSE_PAREN  llamada_2 : expresion llamada_2\n                  | listfunctions llamada_2\n                  | empty empty :'
    
_lr_action_items = {'OPEN_PAREN':([0,4,6,7,8,9,11,12,13,14,15,21,23,24,27,31,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,96,97,98,106,107,108,109,115,117,118,119,120,121,122,124,127,128,130,131,135,136,138,140,143,145,146,147,148,161,163,164,165,167,168,173,174,175,176,177,179,180,181,183,187,200,201,202,203,204,208,212,216,220,223,227,228,229,231,244,245,248,249,253,],[2,5,10,-2,-3,-56,16,-4,-5,19,-44,19,29,33,-55,29,63,33,-99,-100,-101,-102,-103,-30,-11,-13,-31,-79,-39,-29,-19,-20,-82,-81,-83,-84,-86,-40,-41,99,107,-43,109,116,123,125,116,116,116,133,133,123,142,144,-14,-15,-16,-17,-32,-33,-34,-35,-21,-22,-23,-24,-25,-26,-91,-92,-36,-37,-38,158,159,160,63,-30,116,-30,-31,-39,-89,-90,33,125,125,116,116,-85,-72,133,123,133,133,-123,-124,-125,-6,-93,-94,-95,-110,-135,-18,-88,-80,133,-96,207,133,211,-73,-59,-12,33,-27,-28,133,133,-121,33,-114,-117,-109,33,33,123,-120,-122,-111,33,-47,]),'$end':([1,25,],[0,-1,]),'PROGRAM':([2,],[3,]),'ID':([3,24,26,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,64,65,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,97,98,109,115,116,117,118,119,120,121,122,123,124,125,127,128,130,131,133,135,136,138,140,143,145,146,147,148,160,161,163,164,165,167,168,173,174,175,176,177,180,183,191,192,193,194,195,196,198,200,201,202,203,204,207,208,211,212,216,220,223,227,228,229,231,235,237,238,239,240,244,245,248,249,],[4,47,59,67,47,-99,-100,-101,-102,-103,-30,-11,-13,-31,-79,-39,-29,-19,-20,-82,-81,-83,-84,-86,-40,-41,47,120,120,47,120,120,120,136,136,136,120,-14,-15,-16,-17,-32,-33,-34,-35,-21,-22,-23,-24,-25,-26,-91,-92,-87,-36,-37,-38,67,-30,67,120,-30,-31,-39,-89,-90,67,47,67,47,47,120,120,67,-85,-72,136,120,136,136,-123,-124,-125,198,-6,-93,-94,-95,-110,-135,-18,-88,-80,136,-96,136,-73,215,-126,-127,-128,-129,-130,198,-12,47,-27,-28,136,198,136,198,-121,47,-114,-117,-109,47,47,120,247,-131,-132,-133,-134,-120,-122,-111,47,]),'CLOSE_PAREN':([4,6,7,8,9,11,12,13,14,15,17,18,20,21,22,23,24,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,67,74,94,95,96,97,98,99,100,101,102,103,104,105,110,111,112,113,114,115,118,119,120,121,122,126,127,128,129,132,134,135,136,137,139,140,141,149,150,151,152,153,154,155,156,157,158,160,161,162,166,168,169,170,171,172,173,174,175,176,177,178,180,182,183,184,185,186,187,188,189,190,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,230,231,232,233,234,236,241,242,243,246,247,248,250,251,252,253,],[-139,-139,-2,-3,-56,-139,-4,-5,-139,-44,25,-106,27,-139,-58,-139,-139,-55,-57,61,-139,-46,94,-139,-108,-99,-100,-101,-102,-103,-30,-11,-13,-31,-79,-39,-29,-19,-20,-82,-81,-83,-84,-86,-40,-41,-43,-45,-139,-139,-105,-107,-36,-37,-38,-139,-60,-61,-62,-66,-67,-68,161,-42,-8,-9,-10,-30,-30,-31,-39,-89,-90,168,-139,-139,-138,173,174,-85,-72,175,177,-139,-98,183,-139,-139,-139,-77,187,-63,-64,-65,-139,-139,-6,-7,200,-135,-136,-137,202,203,-18,-88,-80,-139,-96,-97,-139,212,-73,-74,-75,-76,-59,213,-139,-71,216,-139,-54,-12,-27,-28,-139,220,-116,-139,-139,223,-119,-139,-121,-69,-70,-48,-53,227,-115,-114,228,-118,-117,229,230,231,-109,-139,-139,244,245,-49,-51,248,-112,-113,249,-52,-111,-139,253,-50,-47,]),'VARS':([5,],[9,]),'FUNCTIONS':([10,],[15,]),'MAIN':([16,],[24,]),'DECLARE':([19,],[26,]),'TRUE':([24,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,64,65,66,67,68,69,70,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,98,115,117,118,119,120,121,122,124,127,128,130,131,140,161,167,168,173,174,175,177,183,200,201,202,203,212,216,220,223,227,228,229,231,248,249,],[49,49,-99,-100,-101,-102,-103,-30,-11,-13,-31,-79,-39,-29,-19,-20,-82,-81,-83,-84,-86,-40,-41,49,121,49,49,121,121,121,49,-14,-15,-16,-17,-32,-33,-34,-35,-21,-22,-23,-24,-25,-26,-36,-37,-38,-30,121,-30,-31,-39,-89,-90,49,49,49,121,121,49,-6,-110,-135,-18,-88,-80,-96,-73,-12,49,-27,-28,-121,49,-114,-117,-109,49,49,49,-111,49,]),'FALSE':([24,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,64,65,66,67,68,69,70,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,98,115,117,118,119,120,121,122,124,127,128,130,131,140,161,167,168,173,174,175,177,183,200,201,202,203,212,216,220,223,227,228,229,231,248,249,],[50,50,-99,-100,-101,-102,-103,-30,-11,-13,-31,-79,-39,-29,-19,-20,-82,-81,-83,-84,-86,-40,-41,50,122,50,50,122,122,122,50,-14,-15,-16,-17,-32,-33,-34,-35,-21,-22,-23,-24,-25,-26,-36,-37,-38,-30,122,-30,-31,-39,-89,-90,50,50,50,122,122,50,-6,-110,-135,-18,-88,-80,-96,-73,-12,50,-27,-28,-121,50,-114,-117,-109,50,50,50,-111,50,]),'CTEI':([24,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,65,66,67,68,69,70,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,98,99,103,104,105,115,117,118,119,120,121,122,124,127,128,130,131,140,150,151,152,155,156,157,158,161,167,168,173,174,175,177,183,189,200,201,202,203,212,216,220,223,227,228,229,231,248,249,],[56,56,-99,-100,-101,-102,-103,-30,-11,-13,-31,-79,-39,-29,-19,-20,-82,-81,-83,-84,-86,-40,-41,103,56,56,56,56,56,56,56,56,-14,-15,-16,-17,-32,-33,-34,-35,-21,-22,-23,-24,-25,-26,-36,-37,-38,150,-66,-67,-68,-30,56,-30,-31,-39,-89,-90,56,56,56,56,56,56,150,150,150,-63,-64,-65,103,-6,-110,-135,-18,-88,-80,-96,-73,103,-12,56,-27,-28,-121,56,-114,-117,-109,56,56,56,-111,56,]),'CTEF':([24,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,65,66,67,68,69,70,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,98,99,103,104,105,115,117,118,119,120,121,122,124,127,128,130,131,140,150,151,152,155,156,157,158,161,167,168,173,174,175,177,183,189,200,201,202,203,212,216,220,223,227,228,229,231,248,249,],[57,57,-99,-100,-101,-102,-103,-30,-11,-13,-31,-79,-39,-29,-19,-20,-82,-81,-83,-84,-86,-40,-41,104,57,57,57,57,57,57,57,57,-14,-15,-16,-17,-32,-33,-34,-35,-21,-22,-23,-24,-25,-26,-36,-37,-38,151,-66,-67,-68,-30,57,-30,-31,-39,-89,-90,57,57,57,57,57,57,151,151,151,-63,-64,-65,104,-6,-110,-135,-18,-88,-80,-96,-73,104,-12,57,-27,-28,-121,57,-114,-117,-109,57,57,57,-111,57,]),'QUOTE':([24,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,67,71,72,73,88,89,90,91,92,93,96,97,98,115,118,119,120,124,127,128,135,136,138,143,145,146,147,148,161,163,164,165,167,168,173,174,175,176,177,180,183,200,201,202,203,204,208,212,216,220,223,227,228,229,244,245,248,249,],[58,58,-99,-100,-101,-102,-103,-30,-11,-13,-31,-79,-39,-29,-19,-20,-82,-81,-83,-84,-86,-40,-41,106,58,58,58,58,58,-94,-93,-95,-91,-92,-87,-36,-37,-38,-30,-30,-31,-39,58,58,58,-85,-72,58,58,58,-123,-124,-125,-6,-93,-94,-95,-110,-135,-18,-88,-80,58,-96,58,-73,-12,58,-27,-28,58,58,-121,58,-114,-117,-109,58,58,-120,-122,-111,58,]),'DEFINE':([29,],[60,]),'PRINT':([33,],[64,]),'IF':([33,],[66,]),'APPEND':([33,109,125,133,],[73,73,73,73,]),'LIST':([33,109,125,133,159,230,247,250,],[74,74,74,74,196,240,-52,240,]),'MAP':([33,109,125,133,],[75,75,75,75,]),'FILTER':([33,109,125,133,],[76,76,76,76,]),'LT':([33,109,123,125,],[77,77,77,77,]),'GT':([33,109,123,125,],[78,78,78,78,]),'NE':([33,109,123,125,],[79,79,79,79,]),'EQUAL':([33,109,123,125,],[80,80,80,80,]),'PLUS':([33,109,116,123,125,],[81,81,81,81,81,]),'MINUS':([33,109,116,123,125,],[82,82,82,82,82,]),'TIMES':([33,109,116,123,125,],[83,83,83,83,83,]),'DIVIDE':([33,109,116,123,125,],[84,84,84,84,84,]),'EVEN_PREDICATE':([33,76,109,123,125,],[85,146,85,85,85,]),'INT_PREDICATE':([33,76,109,123,125,],[86,147,86,86,86,]),'FLOAT_PREDICATE':([33,76,109,123,125,],[87,148,87,87,87,]),'LIST_PREDICATE':([33,109,116,123,125,],[88,88,164,88,88,]),'NULL_PREDICATE':([33,109,116,123,125,],[89,89,163,89,89,]),'EMPTY_PREDICATE':([33,109,116,123,125,],[90,90,165,90,90,]),'CAR':([33,109,116,123,125,],[91,91,91,91,91,]),'LENGTH':([33,109,116,123,125,],[92,92,92,92,92,]),'CDR':([33,109,125,133,],[93,93,93,93,]),'CTEC':([59,64,99,103,104,105,150,151,152,155,156,157,158,189,],[105,111,152,-66,-67,-68,152,152,152,-63,-64,-65,105,105,]),'LAMBDA':([63,142,144,],[108,179,181,]),'INT':([159,230,247,250,],[192,237,-52,237,]),'FLOAT':([159,230,247,250,],[193,238,-52,238,]),'CHAR':([159,230,247,250,],[194,239,-52,239,]),'VOID':([159,],[195,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'programa_2':([4,],[6,]),'declaracionvariables':([4,],[7,]),'empty':([4,6,11,14,21,23,24,31,35,67,74,99,127,128,140,150,151,152,158,160,176,180,189,198,204,207,208,211,230,231,250,],[8,13,18,22,22,32,36,32,36,129,141,153,129,129,141,153,153,153,190,199,206,210,190,199,206,199,210,199,236,243,236,]),'programa_3':([6,],[11,]),'declaracionfuncion':([6,],[12,]),'np_create_dirFuncVars':([9,],[14,]),'main':([11,],[17,]),'declaracionvariables_2':([14,21,],[20,28,]),'declare':([14,21,],[21,21,]),'np_create_funcObject':([15,],[23,]),'declaracionfuncion_2':([23,31,],[30,62,]),'funcion':([23,31,],[31,31,]),'main_2':([24,35,],[34,95,]),'bloque':([24,35,124,201,216,228,229,249,],[35,35,167,218,226,232,233,251,]),'imprimir':([24,35,124,201,216,228,229,249,],[37,37,37,37,37,37,37,37,]),'expresion':([24,35,64,66,67,74,124,127,128,140,201,216,228,229,231,249,],[38,38,112,124,127,140,38,127,127,140,38,38,38,38,242,38,]),'condicion':([24,35,124,201,216,228,229,249,],[39,39,39,39,39,39,39,39,]),'lambda':([24,35,64,124,201,216,228,229,249,],[40,40,113,40,40,40,40,40,40,]),'listfunctions':([24,35,64,67,124,127,128,201,216,228,229,249,],[41,41,114,128,41,128,128,41,41,41,41,41,]),'llamada':([24,35,64,65,66,67,68,69,70,71,73,74,117,124,127,128,130,131,138,140,143,145,176,180,201,204,208,216,228,229,231,249,],[42,42,115,118,118,115,118,118,118,135,135,118,118,42,115,115,118,118,135,118,135,135,135,135,42,135,135,42,42,42,118,42,]),'exp':([24,35,64,65,66,67,68,69,70,74,117,124,127,128,130,131,140,201,216,228,229,231,249,],[43,43,43,117,43,43,130,131,132,43,166,43,43,43,171,172,43,43,43,43,43,43,43,]),'expresionesunarias':([24,35,64,66,67,74,124,127,128,140,201,216,228,229,231,249,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'returnelement':([24,35,64,65,66,67,68,69,70,74,117,124,127,128,130,131,140,201,216,228,229,231,249,],[45,45,45,119,119,45,119,119,119,119,119,45,45,45,119,119,119,45,45,45,45,119,45,]),'returnlist':([24,35,64,67,71,73,124,127,128,138,143,145,176,180,201,204,208,216,228,229,249,],[46,46,46,46,134,138,46,46,46,176,180,182,204,208,46,204,208,46,46,46,46,]),'varcte':([24,35,64,65,66,67,68,69,70,74,117,124,127,128,130,131,140,201,216,228,229,231,249,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'lista':([24,35,64,67,71,72,73,124,127,128,138,143,145,176,180,201,204,208,216,228,229,249,],[51,51,51,51,51,137,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'append':([24,35,64,67,71,73,124,127,128,138,143,145,176,180,201,204,208,216,228,229,249,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'createlist':([24,35,64,67,71,73,124,127,128,138,143,145,176,180,201,204,208,216,228,229,249,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'map':([24,35,64,67,71,73,124,127,128,138,143,145,176,180,201,204,208,216,228,229,249,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'filter':([24,35,64,67,71,73,124,127,128,138,143,145,176,180,201,204,208,216,228,229,249,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'signosrelacionales':([33,109,123,125,],[65,65,65,65,]),'signos1':([33,109,116,123,125,],[68,68,68,68,68,]),'signos2':([33,109,116,123,125,],[69,69,69,69,69,]),'expresionesunarias_2':([33,109,123,125,],[70,70,70,70,]),'returnelement_2':([33,109,116,123,125,],[71,71,71,71,71,]),'returnlist_2':([33,109,125,133,],[72,72,72,72,]),'np_stackCTEID':([47,120,],[96,96,]),'np_stackCTEI':([56,],[97,]),'np_stackCTEF':([57,],[98,]),'declare_2':([59,],[100,]),'definircte':([59,158,189,],[101,189,189,]),'definirlista':([59,],[102,]),'imprimir_2':([64,],[110,]),'llamada_2':([67,127,128,],[126,169,170,]),'createlist_2':([74,140,],[139,178,]),'map_3':([75,],[143,]),'filter_2':([76,],[145,]),'lista_2':([99,150,151,152,],[149,184,185,186,]),'np_create_varTable':([100,],[154,]),'np_definicioni':([103,],[155,]),'np_definicionf':([104,],[156,]),'np_definicionc':([105,],[157,]),'np_stackCTEC':([111,],[162,]),'definirlista_2':([158,189,],[188,214,]),'tipo':([159,],[191,]),'param':([160,198,207,211,],[197,217,221,224,]),'rellenar_gotof':([167,],[201,]),'append_2':([176,204,],[205,219,]),'map_2':([180,208,],[209,222,]),'np_create_dirFunc':([215,],[225,]),'typeparam':([230,250,],[234,252,]),'tipovars':([230,250,],[235,235,]),'lambda_2':([231,],[241,]),'np_varTabFunc':([234,],[246,]),'np_idparam':([247,],[250,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> OPEN_PAREN PROGRAM ID programa_2 programa_3 main CLOSE_PAREN','programa',7,'p_programa','parser.py',40),
  ('programa_2 -> declaracionvariables','programa_2',1,'p_programa_2','parser.py',44),
  ('programa_2 -> empty','programa_2',1,'p_programa_2','parser.py',45),
  ('programa_3 -> declaracionfuncion','programa_3',1,'p_programa_3','parser.py',48),
  ('programa_3 -> empty','programa_3',1,'p_programa_3','parser.py',49),
  ('imprimir -> OPEN_PAREN PRINT imprimir_2 CLOSE_PAREN','imprimir',4,'p_imprimir','parser.py',54),
  ('imprimir_2 -> CTEC np_stackCTEC','imprimir_2',2,'p_imprimir_2','parser.py',65),
  ('imprimir_2 -> expresion','imprimir_2',1,'p_imprimir_2','parser.py',66),
  ('imprimir_2 -> lambda','imprimir_2',1,'p_imprimir_2','parser.py',67),
  ('imprimir_2 -> listfunctions','imprimir_2',1,'p_imprimir_2','parser.py',68),
  ('expresion -> exp','expresion',1,'p_expresion','parser.py',74),
  ('expresion -> OPEN_PAREN signosrelacionales exp exp CLOSE_PAREN','expresion',5,'p_expresion','parser.py',75),
  ('expresion -> expresionesunarias','expresion',1,'p_expresion','parser.py',76),
  ('signosrelacionales -> LT','signosrelacionales',1,'p_signosrelacionales','parser.py',123),
  ('signosrelacionales -> GT','signosrelacionales',1,'p_signosrelacionales','parser.py',124),
  ('signosrelacionales -> NE','signosrelacionales',1,'p_signosrelacionales','parser.py',125),
  ('signosrelacionales -> EQUAL','signosrelacionales',1,'p_signosrelacionales','parser.py',126),
  ('expresionesunarias -> OPEN_PAREN expresionesunarias_2 exp CLOSE_PAREN','expresionesunarias',4,'p_expresionesunarias','parser.py',132),
  ('expresionesunarias -> TRUE','expresionesunarias',1,'p_expresionesunarias','parser.py',133),
  ('expresionesunarias -> FALSE','expresionesunarias',1,'p_expresionesunarias','parser.py',134),
  ('expresionesunarias_2 -> EVEN_PREDICATE','expresionesunarias_2',1,'p_expresionesunarias_2','parser.py',169),
  ('expresionesunarias_2 -> INT_PREDICATE','expresionesunarias_2',1,'p_expresionesunarias_2','parser.py',170),
  ('expresionesunarias_2 -> FLOAT_PREDICATE','expresionesunarias_2',1,'p_expresionesunarias_2','parser.py',171),
  ('expresionesunarias_2 -> LIST_PREDICATE','expresionesunarias_2',1,'p_expresionesunarias_2','parser.py',172),
  ('expresionesunarias_2 -> NULL_PREDICATE','expresionesunarias_2',1,'p_expresionesunarias_2','parser.py',173),
  ('expresionesunarias_2 -> EMPTY_PREDICATE','expresionesunarias_2',1,'p_expresionesunarias_2','parser.py',174),
  ('exp -> OPEN_PAREN signos1 exp exp CLOSE_PAREN','exp',5,'p_exp','parser.py',179),
  ('exp -> OPEN_PAREN signos2 exp exp CLOSE_PAREN','exp',5,'p_exp','parser.py',180),
  ('exp -> varcte','exp',1,'p_exp','parser.py',181),
  ('exp -> llamada','exp',1,'p_exp','parser.py',182),
  ('exp -> returnelement','exp',1,'p_exp','parser.py',183),
  ('signos1 -> PLUS','signos1',1,'p_signos1','parser.py',224),
  ('signos1 -> MINUS','signos1',1,'p_signos1','parser.py',225),
  ('signos2 -> TIMES','signos2',1,'p_signos2','parser.py',232),
  ('signos2 -> DIVIDE','signos2',1,'p_signos2','parser.py',233),
  ('varcte -> ID np_stackCTEID','varcte',2,'p_varcte','parser.py',239),
  ('varcte -> CTEI np_stackCTEI','varcte',2,'p_varcte','parser.py',240),
  ('varcte -> CTEF np_stackCTEF','varcte',2,'p_varcte','parser.py',241),
  ('np_stackCTEID -> <empty>','np_stackCTEID',0,'p_np_stackCTEID','parser.py',245),
  ('np_stackCTEI -> <empty>','np_stackCTEI',0,'p_np_stackCTEI','parser.py',257),
  ('np_stackCTEF -> <empty>','np_stackCTEF',0,'p_np_stackCTEF','parser.py',269),
  ('np_stackCTEC -> <empty>','np_stackCTEC',0,'p_np_stackCTEC','parser.py',281),
  ('declaracionfuncion -> OPEN_PAREN FUNCTIONS np_create_funcObject declaracionfuncion_2 CLOSE_PAREN','declaracionfuncion',5,'p_declaracionfuncion','parser.py',295),
  ('np_create_funcObject -> <empty>','np_create_funcObject',0,'p_np_create_funcObject','parser.py',298),
  ('declaracionfuncion_2 -> funcion declaracionfuncion_2','declaracionfuncion_2',2,'p_declaracionfuncion_2','parser.py',303),
  ('declaracionfuncion_2 -> empty','declaracionfuncion_2',1,'p_declaracionfuncion_2','parser.py',304),
  ('funcion -> OPEN_PAREN DEFINE OPEN_PAREN OPEN_PAREN tipo ID np_create_dirFunc CLOSE_PAREN typeparam np_varTabFunc CLOSE_PAREN bloque CLOSE_PAREN','funcion',13,'p_funcion','parser.py',309),
  ('np_create_dirFunc -> <empty>','np_create_dirFunc',0,'p_np_create_dirFunc','parser.py',312),
  ('np_varTabFunc -> <empty>','np_varTabFunc',0,'p_np_varTabFunc','parser.py',329),
  ('typeparam -> tipovars ID np_idparam typeparam','typeparam',4,'p_typeparam','parser.py',349),
  ('typeparam -> empty','typeparam',1,'p_typeparam','parser.py',350),
  ('np_idparam -> <empty>','np_idparam',0,'p_np_idparam','parser.py',354),
  ('param -> ID param','param',2,'p_param','parser.py',361),
  ('param -> empty','param',1,'p_param','parser.py',362),
  ('declaracionvariables -> OPEN_PAREN VARS np_create_dirFuncVars declaracionvariables_2 CLOSE_PAREN','declaracionvariables',5,'p_declaracionvariables','parser.py',367),
  ('np_create_dirFuncVars -> <empty>','np_create_dirFuncVars',0,'p_np_create_dirFuncVars','parser.py',370),
  ('declaracionvariables_2 -> declare declaracionvariables_2','declaracionvariables_2',2,'p_declaracionvariables_2','parser.py',375),
  ('declaracionvariables_2 -> empty','declaracionvariables_2',1,'p_declaracionvariables_2','parser.py',376),
  ('declare -> OPEN_PAREN DECLARE ID declare_2 np_create_varTable CLOSE_PAREN','declare',6,'p_declare','parser.py',381),
  ('np_create_varTable -> <empty>','np_create_varTable',0,'p_np_create_varTable','parser.py',385),
  ('declare_2 -> definircte','declare_2',1,'p_declare_2','parser.py',399),
  ('declare_2 -> definirlista','declare_2',1,'p_declare_2','parser.py',400),
  ('definircte -> CTEI np_definicioni','definircte',2,'p_definircte','parser.py',405),
  ('definircte -> CTEF np_definicionf','definircte',2,'p_definircte','parser.py',406),
  ('definircte -> CTEC np_definicionc','definircte',2,'p_definircte','parser.py',407),
  ('np_definicioni -> <empty>','np_definicioni',0,'p_np_definicioni','parser.py',410),
  ('np_definicionf -> <empty>','np_definicionf',0,'p_np_definicionf','parser.py',414),
  ('np_definicionc -> <empty>','np_definicionc',0,'p_np_definicionc','parser.py',418),
  ('definirlista -> QUOTE OPEN_PAREN definirlista_2 CLOSE_PAREN','definirlista',4,'p_definirlista','parser.py',424),
  ('definirlista_2 -> definircte definirlista_2','definirlista_2',2,'p_definirlista_2','parser.py',428),
  ('definirlista_2 -> empty','definirlista_2',1,'p_definirlista_2','parser.py',429),
  ('lista -> ID','lista',1,'p_lista','parser.py',433),
  ('lista -> QUOTE OPEN_PAREN lista_2 CLOSE_PAREN','lista',4,'p_lista','parser.py',434),
  ('lista_2 -> CTEI lista_2','lista_2',2,'p_lista_2','parser.py',438),
  ('lista_2 -> CTEF lista_2','lista_2',2,'p_lista_2','parser.py',439),
  ('lista_2 -> CTEC lista_2','lista_2',2,'p_lista_2','parser.py',440),
  ('lista_2 -> empty','lista_2',1,'p_lista_2','parser.py',441),
  ('listfunctions -> returnelement','listfunctions',1,'p_listfunctions','parser.py',447),
  ('listfunctions -> returnlist','listfunctions',1,'p_listfunctions','parser.py',448),
  ('returnlist -> OPEN_PAREN returnlist_2 lista CLOSE_PAREN','returnlist',4,'p_returnlist','parser.py',453),
  ('returnlist -> append','returnlist',1,'p_returnlist','parser.py',454),
  ('returnlist -> lista','returnlist',1,'p_returnlist','parser.py',455),
  ('returnlist -> createlist','returnlist',1,'p_returnlist','parser.py',456),
  ('returnlist -> map','returnlist',1,'p_returnlist','parser.py',457),
  ('returnlist -> llamada','returnlist',1,'p_returnlist','parser.py',458),
  ('returnlist -> filter','returnlist',1,'p_returnlist','parser.py',459),
  ('returnlist_2 -> CDR','returnlist_2',1,'p_returnlist_2','parser.py',463),
  ('returnelement -> OPEN_PAREN returnelement_2 returnlist CLOSE_PAREN','returnelement',4,'p_returnelement','parser.py',467),
  ('returnelement -> TRUE','returnelement',1,'p_returnelement','parser.py',468),
  ('returnelement -> FALSE','returnelement',1,'p_returnelement','parser.py',469),
  ('returnelement_2 -> CAR','returnelement_2',1,'p_returnelement_2','parser.py',473),
  ('returnelement_2 -> LENGTH','returnelement_2',1,'p_returnelement_2','parser.py',474),
  ('returnelement_2 -> NULL_PREDICATE','returnelement_2',1,'p_returnelement_2','parser.py',475),
  ('returnelement_2 -> LIST_PREDICATE','returnelement_2',1,'p_returnelement_2','parser.py',476),
  ('returnelement_2 -> EMPTY_PREDICATE','returnelement_2',1,'p_returnelement_2','parser.py',477),
  ('createlist -> OPEN_PAREN LIST createlist_2 CLOSE_PAREN','createlist',4,'p_createlist','parser.py',482),
  ('createlist_2 -> expresion createlist_2','createlist_2',2,'p_createlist_2','parser.py',485),
  ('createlist_2 -> empty','createlist_2',1,'p_createlist_2','parser.py',486),
  ('bloque -> imprimir','bloque',1,'p_bloque','parser.py',493),
  ('bloque -> expresion','bloque',1,'p_bloque','parser.py',494),
  ('bloque -> condicion','bloque',1,'p_bloque','parser.py',495),
  ('bloque -> lambda','bloque',1,'p_bloque','parser.py',496),
  ('bloque -> listfunctions','bloque',1,'p_bloque','parser.py',497),
  ('bloque -> llamada','bloque',1,'p_bloque','parser.py',498),
  ('main -> OPEN_PAREN MAIN main_2 CLOSE_PAREN','main',4,'p_main','parser.py',504),
  ('main -> empty','main',1,'p_main','parser.py',505),
  ('main_2 -> bloque main_2','main_2',2,'p_main_2','parser.py',508),
  ('main_2 -> empty','main_2',1,'p_main_2','parser.py',509),
  ('condicion -> OPEN_PAREN IF expresion bloque rellenar_gotof bloque CLOSE_PAREN','condicion',7,'p_condicion','parser.py',514),
  ('rellenar_gotof -> <empty>','rellenar_gotof',0,'p_rellenar_gotof','parser.py',517),
  ('lambda -> OPEN_PAREN OPEN_PAREN LAMBDA OPEN_PAREN param CLOSE_PAREN bloque CLOSE_PAREN lambda_2 CLOSE_PAREN','lambda',10,'p_lambda','parser.py',529),
  ('lambda_2 -> expresion','lambda_2',1,'p_lambda_2','parser.py',532),
  ('lambda_2 -> empty','lambda_2',1,'p_lambda_2','parser.py',533),
  ('append -> OPEN_PAREN APPEND returnlist returnlist append_2 CLOSE_PAREN','append',6,'p_append','parser.py',538),
  ('append_2 -> returnlist append_2','append_2',2,'p_append_2','parser.py',541),
  ('append_2 -> empty','append_2',1,'p_append_2','parser.py',542),
  ('map -> OPEN_PAREN MAP map_3 returnlist map_2 CLOSE_PAREN','map',6,'p_map','parser.py',547),
  ('map_2 -> returnlist map_2','map_2',2,'p_map_2','parser.py',550),
  ('map_2 -> empty','map_2',1,'p_map_2','parser.py',551),
  ('map_3 -> OPEN_PAREN LAMBDA OPEN_PAREN param CLOSE_PAREN bloque CLOSE_PAREN','map_3',7,'p_map_3','parser.py',554),
  ('filter -> OPEN_PAREN FILTER filter_2 returnlist CLOSE_PAREN','filter',5,'p_filter','parser.py',559),
  ('filter_2 -> OPEN_PAREN LAMBDA OPEN_PAREN param CLOSE_PAREN bloque CLOSE_PAREN','filter_2',7,'p_filter_2','parser.py',562),
  ('filter_2 -> EVEN_PREDICATE','filter_2',1,'p_filter_2','parser.py',563),
  ('filter_2 -> INT_PREDICATE','filter_2',1,'p_filter_2','parser.py',564),
  ('filter_2 -> FLOAT_PREDICATE','filter_2',1,'p_filter_2','parser.py',565),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',569),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',570),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',571),
  ('tipo -> VOID','tipo',1,'p_tipo','parser.py',572),
  ('tipo -> LIST','tipo',1,'p_tipo','parser.py',573),
  ('tipovars -> INT','tipovars',1,'p_tipovars','parser.py',579),
  ('tipovars -> FLOAT','tipovars',1,'p_tipovars','parser.py',580),
  ('tipovars -> CHAR','tipovars',1,'p_tipovars','parser.py',581),
  ('tipovars -> LIST','tipovars',1,'p_tipovars','parser.py',582),
  ('llamada -> OPEN_PAREN ID llamada_2 CLOSE_PAREN','llamada',4,'p_llamada','parser.py',589),
  ('llamada_2 -> expresion llamada_2','llamada_2',2,'p_llamada_2','parser.py',592),
  ('llamada_2 -> listfunctions llamada_2','llamada_2',2,'p_llamada_2','parser.py',593),
  ('llamada_2 -> empty','llamada_2',1,'p_llamada_2','parser.py',594),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',601),
]
