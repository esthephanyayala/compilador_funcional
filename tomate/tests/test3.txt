(program factorial
    (vars
        (declare i 1)
        (declare j 2)
    )
    (functions
        (define ( ( int f1 ) int i1 int i2)  
            (if (== i1 i2)
                    (lambda (i1 i2) (a b) (+ a b) )
                    (lambda (i1 i2) (a b) (- a b) )
                ) 
        )
        (define ( (int factoria ) int n)
            (if (== n 1 )
                (+ n 0)
                ( * n (factoria (- n 1) ) )
             )
        )
        (define ( (void equal) int a int b )
            (if (== a b)
                (print 't')
                (print 'f')
            )
        )
        (define ( (void greater) int a int b int c )
            (if (> a b)
                ( if (> a c)
                    (print a)
                    (if (> c b)
                        (print c)
                        (print b)
                    ) 
                )
                ( if (> b c)
                    (print b)
                    (if (> c a)
                        (print c)
                        (print a)
                    )
                )
            )
        )
        (define ( (int lambdaShido) int x  int y )
            (lambda ( x y) ( a b) (+ (+ a b ) 10 )) 
        )
        (define ( ( int f2 ) int i1 int i2)  
            (+ i1 i2)
        )
        (define ( ( int f3 ) int i1 int i2)  
            (+ i1 i2)
        )
    )

    
    (main
        (print (factoria 8))
        (print (> 1 2))
        (print (evenp i ))
        (print (evenp j ))
        (print (intp j ))
        (print (floatp j ))
        (print (floatp 1.1 ))
        (print tt )
        (print ff)
        (if ff (print(+ 1 1)) (print(+ 2 2)))
        (equal i 1)
        (equal i j)
        (greater 4 8 10)
        (print (lambda ( 2 3) ( a b) ( * a b ) ))
        ( lambda ( i j) ( a b ) (lambda ( a b) ( x y) (if (> x y) (print x) (print y)) ) ) 
        (print (lambdaShido 1 2) )
    )
)
